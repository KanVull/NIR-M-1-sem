from tensorflow import keras, nn
from tensorflow.keras.datasets import fashion_mnist
import math
import numpy as np

from tensorflow.keras.models import Sequential, Model
from tensorflow.keras.layers import Dense
from tensorflow.python.keras.layers import deserialize, serialize
from tensorflow.python.keras.saving import saving_utils

NUM_EPOCHS = 25
BS = 64

(trainX, trainY), (testX, testY) = fashion_mnist.load_data()
print(f'len trainX - {len(trainX)} len testX - {len(testX)}')
input()
trainX = trainX.reshape(trainX.shape[0], 784) / 255
testX = testX.reshape(testX.shape[0], 784) / 255

model = Sequential([
    Dense(800, input_dim=28*28, activation=nn.relu),
    Dense(800, activation=nn.relu),
    Dense(10, activation=nn.softmax)
])

model.compile(optimizer="SGD",
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy']
)

model.fit(trainX, trainY, 
          epochs=NUM_EPOCHS, 
          batch_size=BS,
          verbose=1,
          validation_data=(testX, testY)
)

print("Evaluate on test data")
results = model.evaluate(testX, testY, batch_size=BS)
print("test loss, test acc:", results)

print('h')